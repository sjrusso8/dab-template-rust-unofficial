# {{.project_name}}

The '{{.project_name}}' project was generated by using the rust template. This template
creates a python package with an entrypoint to call a rust function. 

## Getting started

1. Install the Databricks CLI from https://docs.databricks.com/dev-tools/cli/databricks-cli.html

2. Install [uv](https://docs.astral.sh/uv/getting-started/installation/) as the package and project manager 

3. Install [maturin](https://www.maturin.rs/installation) to build rust binaries as python packages

4. Authenticate to your Databricks workspace, if you have not done so already:
    ```
    $ databricks configure
    ```

5. To deploy a development copy of this project, type:
    ```
    $ databricks bundle deploy --target dev
    ```
    (Note that "dev" is the default target, so the `--target` parameter
    is optional here.)

    This builds and deploys everything that's defined for this project.
    For example, the default template would deploy a job called
    `[dev yourname] {{.project_name}}_job` to your workspace.
    You can find that job by opening your workpace and clicking on **Workflows**.

6. Similarly, to deploy a production copy, type:
   ```
   $ databricks bundle deploy --target prod
   ```

   Note that the default job from the template has a schedule that runs every day
   (defined in resources/{{.project_name}}.job.yml). The schedule
   is paused when deploying in development mode (see
   https://docs.databricks.com/dev-tools/bundles/deployment-modes.html).

7. To run a job or pipeline, use the "run" command:
   ```
   $ databricks bundle run
   ```

8. For documentation on the Databricks asset bundles format used
   for this project, and for CI/CD configuration, see
   https://docs.databricks.com/dev-tools/bundles/index.html.
